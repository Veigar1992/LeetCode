class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int N1 = nums1.size();
        int N2 = nums2.size();
        if (N1 > N2) return findMedianSortedArrays(nums2, nums1);
        int imin=0, imax=N1, half_len=(N1+N2+1)/2;
        while(imin<=imax){
            int i=(imin+imax)/2;
            int j=half_len - i;
            if (i<N1 && nums2[j-1] > nums1[i]){
                imin = i+1;
            }
            else if (i>0 && nums1[i-1] > nums2[j]){
                imax = i-1;
            }
            else{
                int maxl, minr;
                if (i==0) maxl = nums2[j-1];
                else if (j==0) maxl=nums1[i-1];
                else maxl = max(nums1[i-1], nums2[j-1]);
                
                if (((N1+N2)%2)==1) return maxl;
                
                if (i==N1) minr = nums2[j];
                else if (j==N2) minr=nums1[i];
                else minr = min(nums1[i], nums2[j]);
                
                return (maxl+minr) / 2.0;
            }
        }
        return -1;
    }
};
